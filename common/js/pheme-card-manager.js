var _extends=Object.assign||function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r};function _asyncToGenerator(r){return function(){var e=r.apply(this,arguments);return new Promise(function(r,t){return function n(s,o){try{var c=e[s](o),a=c.value}catch(r){return void t(r)}if(!c.done)return Promise.resolve(a).then(function(r){n("next",r)},function(r){n("throw",r)});r(a)}("next")})}}class PhemeCardManager{constructor(r){if(!r)throw new Error("User Token Required");this.token=r,this.cards=[],this.url="https://auth.uwamakers.com/api/user/cards",this.fetchOpts={headers:{"Content-Type":"application/json; charset=utf-8"}}}clearCards(){const r=this.cards.length;for(let e=0;e<r;e++)this.cards.pop()}detroy(){this.userToken="",this.url="",this.clearCards()}find(){var r=this;return _asyncToGenerator(function*(){const e=yield fetch(`${r.url}/?token=${r.token}`,_extends({method:"GET"},r.fetchOpts)),t=yield e.json();if(e.ok||console.error(e,t),!t.success)throw new Error(t.message);r.clearCards();for(let e of t.cards)r.cards.push(e);return t.cards})()}create(r,e){var t=this;return _asyncToGenerator(function*(){const n=yield fetch(`${t.url}/?token=${t.token}`,_extends({},t.fetchOpts,{method:"POST",body:JSON.stringify({uuid:r,name:e})})),s=yield n.json();if(n.ok||console.error(n,s),!s.success)throw new Error(s.message);return t.cards.push(s.card),s.card})()}get(r){var e=this;return _asyncToGenerator(function*(){const t=yield fetch(`${e.url}/${r}?token=${e.token}`,_extends({method:"GET"},e.fetchOpts)),n=yield t.json();if(t.ok||console.error(t,n),!n.success)throw new Error(n.message);return n.card})()}patch(r,e){var t=this;return _asyncToGenerator(function*(){const n=yield fetch(`${t.url}/${r}?token=${t.token}`,_extends({},t.fetchOpts,{method:"POST",body:JSON.stringify({name:e})})),s=yield n.json();if(n.ok||console.error(n,s),!s.success)throw new Error(s.message);const o=t.cards.findIndex(function(r){return r.cardId===s.card.cardId});return-1!==o&&t.cards.splice(o,1,s.card),s.card})()}delete(r){var e=this;return _asyncToGenerator(function*(){const t=yield fetch(`${e.url}/${r}?token=${e.token}`,_extends({method:"DELETE"},e.fetchOpts)),n=yield t.json();if(t.ok||console.error(t,n),!n.success)throw new Error(n.message);const s=e.cards.findIndex(function(r){return r.cardId===n.card.cardId});return-1!==s&&e.cards.splice(s,1),n.card})()}}